name: Draft Release

on:
  push:
    branches:
      - master
    paths:
      - src/manifest.json

concurrency:
  group: ${{ github.workflow }}

jobs:
  get-version-if-new:
    name: Get Version (if new)
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-new-version-step.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/github-script@v7
        id: get-new-version-step
        with:
          script: |
            const fs = require('node:fs');
            const { version } = JSON.parse(fs.readFileSync(('${{ github.workspace }}/src/manifest.json')));
            const releases = await github.paginate(github.rest.repos.listReleases, { owner: context.repo.owner, repo: context.repo.repo, });
            if (releases.every(({ tag_name }) => tag_name !== `v${version}`)) {
              return version;
            }
            return '';
          result-encoding: string

  draft-release:
    name: Draft Release
    needs: [get-version-if-new]
    if: needs.get-version-if-new.outputs.version != ''
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create release notes
        run: dev/release-notes.sh

      - name: Create Github release draft
        id: create-draft
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ needs.get-version-if-new.outputs.version }}
          tag_name: v${{ needs.get-version-if-new.outputs.version }}
          body_path: release-notes.md
          draft: true

      - run: >
          echo "Created draft: ${{ steps.create-draft.outputs.url }}" >> $GITHUB_STEP_SUMMARY
